/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor
/*
 * ConsultaClienteListar.java
 *
 * Created on 21/11/2010, 17:58:45
 */

package gui;

import java.util.ArrayList;
import java.util.Vector;

import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

import persistencia.PersistenciaCliente;
import persistencia.PersistenciaEstoque;
import persistencia.PersistenciaFornecedor;
import pessoas.Cliente;
import pessoas.Fornecedor;

import estoque.Item;

/**
 *
 * @author felipe
 */
public class ConsultaListar extends javax.swing.JFrame {
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	JFrame object;
	ArrayList<Object> objetos;
    /** Creates new form ConsultaClienteListar */
    public ConsultaListar(ConsultaCliente cliente) {
        initComponents();
		this.object = cliente;
		ArrayList<Cliente> clientes = PersistenciaCliente.getInstance().overview();
		ArrayList<Object> objetos = new ArrayList<Object>();
		for (Cliente cli : clientes) {
			objetos.add(cli);
		}
		String [] cabecalho = new String [] {"Cpf","Nome","Endereco","Telefone"};
		ConsultaClienteTabela.setModel(getData(objetos,cabecalho));
		
    }

	public ConsultaListar(ConsultaFornecedor fornecedor) {
        initComponents();
		this.object = fornecedor;
		ArrayList<Fornecedor> fornecedores = PersistenciaFornecedor.getInstance().overview();
		String [] cabecalho = new String [] {"Cpf","Nome","Endereco","Telefone"};
		objetos = new ArrayList<Object>();
		for (Fornecedor forn : fornecedores) {
			objetos.add(forn);
		}
		cabecalho = new String [] {"Codigo","Nome","Telefone"};
		ConsultaClienteTabela.setModel(getData(objetos,cabecalho));
    }

	public ConsultaListar(ConsultaItem item) {
        initComponents();
		this.object = item;
		ArrayList<Item> itens = PersistenciaEstoque.getInstance().overview();
	    objetos = new ArrayList<Object>();
		String [] cabecalho = new String [] {"Cpf","Nome","Endereco","Telefone"};
		for (Item it : itens) {
			objetos.add(it);
		}
		cabecalho = new String [] {"Codigo","Nome","Preco custo","Margem lucro","Quantidade"};
		ConsultaClienteTabela.setModel(getData(objetos,cabecalho));

    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ConsultaClienteTabela = new javax.swing.JTable();
        ConsultaClienteBotaoOK = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Cliente"));

        ConsultaClienteTabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {},
            new String [] {
                "Nome", "CPF", "Endereco", "Telefone"
            }
        ));
        jScrollPane1.setViewportView(ConsultaClienteTabela);

        ConsultaClienteBotaoOK.setText("OK");
        ConsultaClienteBotaoOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConsultaClienteBotaoOKActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ConsultaClienteBotaoOK, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 514, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 484, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ConsultaClienteBotaoOK)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

/**
 * bot√£o para a listagem 
 * @param evt
 */
    private void ConsultaClienteBotaoOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConsultaClienteBotaoOKActionPerformed
		object.setEnabled(true);
		this.dispose();
	}//GEN-LAST:event_ConsultaClienteBotaoOKActionPerformed
  
    
	private TableModel getData(ArrayList<Object> data,String[] headersName){
		Vector<Vector<String>> dados = new Vector<Vector<String>>();
		Vector<String> headers = new Vector<String>();

		for (int i = 0; i < headersName.length; i++) {
			headers.add(headersName[i]);
		}
		
		if (data != null){
			for (Object itensC : data) {
				if(itensC instanceof Item){
					Vector<String> vetor = new Vector<String>();
					vetor.add(((Integer)((Item)itensC).getCodigo()).toString());
					vetor.add(((Item)itensC).getNome().toString());
					vetor.add(((Float)((Item)itensC).getPrecoCusto()).toString());
					vetor.add(((Float)((Item)itensC).getMargemLucro()).toString());
					vetor.add(((Integer)((Item)itensC).getQuant()).toString());
					dados.add(vetor);
				}
				if(itensC instanceof Fornecedor){
					Vector<String> vetor = new Vector<String>();
					vetor.add(((Fornecedor)itensC).getCnpj());
					vetor.add(((Fornecedor)itensC).getNome().toString());
					vetor.add(((Fornecedor)itensC).getTelefone());				
					dados.add(vetor);
				}
				
				if(itensC instanceof Cliente){
					Vector<String> vetor = new Vector<String>();
					vetor.add(((Cliente)itensC).getCpf());
					vetor.add(((Cliente)itensC).getNome());
					vetor.add(((Cliente)itensC).getEndereco());
					vetor.add(((Cliente)itensC).getTelefone());				
					dados.add(vetor);
				}
			}
		}
		else{
			DefaultTableModel model = new DefaultTableModel(new String[][]{}, headersName);
			return model;			
		}
		DefaultTableModel model = new DefaultTableModel(dados, headers);
		return model;
 	}
    /**
    * @param args the command line arguments
    */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ConsultaClienteBotaoOK;
    private javax.swing.JTable ConsultaClienteTabela;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

}
